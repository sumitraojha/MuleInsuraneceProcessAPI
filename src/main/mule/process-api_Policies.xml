<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:aggregators="http://www.mulesoft.org/schema/mule/aggregators"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/aggregators http://www.mulesoft.org/schema/mule/aggregators/current/mule-aggregators.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<sub-flow name="MongoDB_autoPolicy" doc:id="c9e012de-f9dc-4294-9c1e-93b01fb202d1" >
		<http:request method="GET" doc:name="Request" doc:id="795cb5b7-f7a1-4f01-83ea-00805fb62187" url="http://demo-insurance-system-api.us-e2.cloudhub.io/autopolicy">
						<http:query-params><![CDATA[#[output application/java
---
{
	customerID : payload.CustomerID
}]]]></http:query-params>
					</http:request>
		<ee:transform doc:name="Transform Message" doc:id="de9cd26c-919c-4b03-9491-b13dfa921639" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="autopolicyResponse1" doc:id="f96922fc-2ae4-4a8c-801b-bc957e0bcf16" variableName="autopolicyResponse1" />
	</sub-flow>
	<sub-flow name="MongoDB_homePolicy" doc:id="7b83ce77-53af-45fa-a915-aa28b59b7189" >
		<http:request method="GET" doc:name="Request" doc:id="37561565-e1e2-42f4-8f3e-033527976bf2" url="http://demo-insurance-system-api.us-e2.cloudhub.io/homepolicy">
			<http:query-params ><![CDATA[#[output application/java
---
{
	customerID : payload.CustomerID
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="c60afde4-22d5-4fa4-bdba-48a2668fef29" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="homepolicyResponse2" doc:id="fd965a67-5bdc-4fa7-b703-84a46c6a9472" variableName="homepolicyResponse2" />
	</sub-flow>
	<sub-flow name="Guideware_ClaimCenter" doc:id="a11fbc2f-95f9-4c2a-a127-cad933167aa3" >
		<set-variable value='cc:783' doc:name="Set Variable" doc:id="7f1b94c9-4738-4ffe-9400-2f7f07964fa3" variableName="ccid"/>
		<http:request method="GET" doc:name="Request" doc:id="9b644f57-78a9-4a45-bf2a-3d01fecbfb22" url="http://demo-insurance-system-api.us-e2.cloudhub.io/getClaimGW">
			<http:query-params ><![CDATA[#[output application/java
---
{
	customerID : vars.ccid
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="a5c15f3c-6990-4eb9-9539-e3e5c5a1b6a2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="ClaimGWResponse" doc:id="6ce61688-96e5-4d81-9b2c-56fb3ae5d957" variableName="claimGWResponse"/>
	</sub-flow>
	<sub-flow name="Guideware_PolicyCenter" doc:id="d61a857e-284e-4cff-a84b-3d65e795b3a1" >
		<set-variable value="pc:154" doc:name="Set Variable" doc:id="6115f3ca-d2e3-4818-9a31-9b7073a1ca68" variableName="pcid"/>
		<http:request method="GET" doc:name="Request" doc:id="8b8b830f-4966-4825-95d8-ee52c8bbd073" url="http://demo-insurance-system-api.us-e2.cloudhub.io/getPolicyGW">
			<http:query-params ><![CDATA[#[output application/java
---
{
	customerID : vars.pcid
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="1d62b26d-f5ab-472b-ad65-3e7b0ba08e9a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="Set Variable" doc:id="dc582888-18da-46e9-9267-1a68b2ecd0e3" variableName="AutoPolicyGWResponse"/>
	</sub-flow>
	<flow name="Policies-Main-flow" doc:id="a9212121-caec-4eb5-9ef3-80782630e692" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="421953a1-2426-4e1d-a5aa-e23a244ae4a5" >
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="526fcc51-0e12-459c-83c6-5f15482ff069" name="MongoDB_autoPolicy" />
			</route>
			<route >
				<flow-ref doc:name="Flow Reference" doc:id="ca563ea4-3695-40a8-baa4-bb01a2620d4e" name="MongoDB_homePolicy"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message-response" doc:id="e630ffa1-6d11-42cf-bfc1-a382ffb43f28">
						<ee:message>
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
"Customer"
: {
    CustomerID: vars.CustomerSingleData.CustomerID,
    first_name: vars.CustomerSingleData.first_name,
    last_name: vars.CustomerSingleData.last_name,
    DOB: vars.CustomerSingleData.DOB,
    company_name: vars.CustomerSingleData.company_name,
    address: vars.CustomerSingleData.address,
    city: vars.CustomerSingleData.city,
    county: vars.CustomerSingleData.county,
    state: vars.CustomerSingleData.state,
    zip: vars.CustomerSingleData.zip,
    phone1: vars.CustomerSingleData.phone1,
    autopolicy:  vars.autopolicyResponse1.policy map (item1, index) ->
      if( vars.autopolicyResponse1 != null){
        "CustomerID" : (item1.CustomerID),
        "policy ID" : (item1."Policy ID"),
        "Coverage": (item1.Coverage),
        "Effective To Date": (item1."Effective To Date"),
        "Monthly Premium Auto": (item1."Monthly Premium Auto"),
        "Months Since Last Claim": (item1."Months Since Last Claim"),
        "Months Since Policy Inception": (item1."Months Since Policy Inception"),
        "Number of Open Complaints": (item1."Number of Open Complaints"),
        "Policy Type": (item1."Policy Type"),
        "Vehicle Class": (item1."Vehicle Class"),
        "Vehicle Size": (item1."Vehicle Size")
    }
     else "",
     homepolicy: vars.homepolicyResponse2.homepolicy map (item2, index) ->
     if( vars.homepolicyResponse2 != null){
        "CustomerID" : (item2."CustomerID"),
        "Policy Number":(item2."Policy Number"),
		"QUOTE_DATE":(item2."QUOTE_DATE"),
		"Effective Date":(item2."Effective Date"),
		"CLAIM3YEARS":(item2."CLAIM3YEARS"),
		"LAST_ANNUAL_PREMIUM_GROSS":(item2."LAST_ANNUAL_PREMIUM_GROSS"),
		"PAYMENT_METHOD":(item2."PAYMENT_METHOD"),
		"POLICY_STATUS":(item2."POLICY_STATUS"),
		"AD_BUILDINGS":(item2."AD_BUILDINGS"),
		"RISK_RATED_AREA_B":(item2."RISK_RATED_AREA_B"),
		"LIMIT_BUILDINGS":(item2."LIMIT_BUILDINGS"),
		"NCD_GRANTED_YEARS_B":(item2."NCD_GRANTED_YEARS_B"),
		"AD_CONTENTS":(item2."AD_CONTENTS"),
		"RISK_RATED_AREA_C":(item2."RISK_RATED_AREA_C"),
		"LIMIT_CONTENTS":(item2."LIMIT_CONTENTS"),
		"NCD_GRANTED_YEARS_C":(item2."NCD_GRANTED_YEARS_C"),
		"CONTENTS_COVER":(item2."CONTENTS_COVER"),
		"BUILDINGS_COVER":(item2."BUILDINGS_COVER"),
		"SPEC_LIMIT":(item2."SPEC_LIMIT"),
		"SPEC_ITEM_PREMIUM":(item2."SPEC_ITEM_PREMIUM"),
		"UNSPEC_HRP_PREMIUM":(item2."UNSPEC_HRP_PREMIUM"),
		"APPRMENT_ALARM":(item2."APPRMENT_ALARM"),
		"APPRMENT_LOCKS":(item2."APPRMENT_LOCKS"),
		"BEDROOMS":(item2."BEDROOMS"),
		"ROOF_CONSTRUCTION_CODE":(item2."ROOF_CONSTRUCTION_CODE"),
		"WALL_CONSTRUCTION_CODE":(item2."WALL_CONSTRUCTION_CODE"),
		"FLOOD_RISK_ZONE":(item2."FLOOD_RISK_ZONE"),
		"NEIGH_WATCH":(item2."NEIGH_WATCH"),
		"OWNERSHIP_TYPE_CODE":(item2."OWNERSHIP_TYPE_CODE"),
		"PAYING_GUESTS":(item2."PAYING_GUESTS"),
		"PROP_TYPE_CODE":(item2."PROP_TYPE_CODE"),
		"SAFE_INSTALLED":(item2."SAFE_INSTALLED"),
		"SEC_DISC_REQ":(item2."SEC_DISC_REQ"),
		"SUBSIDENCE":(item2."SUBSIDENCE"),
		"YEARBUILT":(item2."YEARBUILT")
    }
     else "",
     claimGW : vars.claimGWResponse.ClaimGW map (item3, index) ->
     if( vars.claimGWResponse != null){
     
      "ClaimNumber": (item3."ClaimNumber"),
      "FraudIndicator": (item3."FraudIndicator"),
      "LitigationIndicator": (item3."LitigationIndicator"),
      "LossDate": (item3."LossDate"),
      "PolicyNumber": (item3."PolicyNumber"),
      "PolicyTypeName": (item3."PolicyTypeName"),
      "RemainingReserves": (item3."RemainingReserves"),
      "RemainingReservesCurrency": (item3."RemainingReservesCurrency"),
      "Status": (item3."Status"),
      "TotalIncurred": (item3."TotalIncurred"),
      "TotalIncurredCurrency": (item3."TotalIncurredCurrency")
    }
    else ""
 
}]]></ee:set-payload>
						</ee:message>
			<ee:variables >
			</ee:variables>
					</ee:transform>
		<set-variable value="#[payload]" doc:name="Set Variable SingleCustomerComplete" doc:id="77a156c7-2103-4ba4-9ab7-fa2df30b3f9a" variableName="SingleCustomerComplete"/>
		<logger level="INFO" doc:name="Logger" doc:id="827a1bae-28f5-4c6d-b818-c25f074abb6e" message="After SCATTER-GATHER &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;#[vars.SingleCustomerComplete]"/>
	</flow>
</mule>
